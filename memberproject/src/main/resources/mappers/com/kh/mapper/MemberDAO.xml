<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.mybatis.memberproject.mapper.MemberDAO.java">

<!-- 외부 조인에 대한 매핑을 정의 -->
 <resultMap id="MemberMap" type="Member">
    <id property="no" column="NO"/>
    <result property="id" column="ID"/>
    <result property="name" column="NAME"/>
    <result property="coin" column="COIN"/>
    <result property="regDate" column="REG_DATE"/>
    <result property="updDate" column="UPD_DATE"/>
    <result property="enabled" column="ENABLED"/>
    <collection property="authList" resultMap="authMap"></collection>
    <collection property="emailList" resultMap="emailMap"></collection>
 </resultMap>

 <!-- MemberAuth에 대한 맵핑 -->
 <resultMap id="authMap" type="MemberAuth">
    <result property="no" column="NO"/>
    <result property="auth" column="AUTH"/>
 </resultMap>

 <!-- MemberEmail에 대한 맵핑 -->
 <resultMap id="emailMap" type="MemberEmail">
    <result property="no" column="NO"/>
    <result property="email" column="EMAIL"/>
 </resultMap>

<!-- public void insert(Member member) throws Exception; -->
<insert id="insert" parameterType="Member">
    <selectKey keyProperty="no" resultType="int" order="BEFORE">
        SELECT MEMBER_SEQ.NEXTVAL FROM DUAL
    </selectKey>
        INSERT INTO MEMBER(NO,ID,PW,NAME)
        VALUES (#{no}, #{id}, #{pw}, #{name})
</insert>

<!-- public void insertAuth(MemberAuth memberAuth) throws Exception; -->
<insert id="insertAuth" parameterType="MemberAuth">
    INSERT INTO MEMBER_AUTH(NO, AUTH)
    VALUES(#{no},#{auth})
</insert>

<!-- public void insertEmail(MemberEmail MemberEmail) throws Exception; -->
 <insert id="insertEmail" parameterType="MemberEmail">
    INSERT INTO MEMBER_EMAIL(NO, EMAIL)
    VALUES(#{no}, #{email})
 </insert>

 <!-- public List<Member> selectAll() throws Exception; -->
 <select id="selectAll" resultType="Member">
    SELECT NO, ID, PW, NAME, REG_DATE
    FROM MEMBER
    ORDER BY REG_DATE DESC
 </select>

 <!-- public Member selectJoin(Member member) throws Exception; -->
  <select id="selectJoin" parameterType="Member" resultMap="MemberMap">
    SELECT M.NO, ID, PW, NAME, REG_DATE, UPD_DATE, AUTH, EMAIL
    FROM MEMBER M
    LEFT OUTER JOIN MEMBER_AUTH A ON M.NO = A.NO
    LEFT OUTER JOIN MEMBER_EMAIL E ON M.NO = E.NO
    WHERE M.NO = #{no}
  </select>

<!-- public void update(Member member) throws Exception; -->
  <update id="update" parameterType="Member">
    UPDATE MEMBER 
    SET NAME = #{name}
    WHERE NO = #{no}
  </update>

<!-- public void delete(Member member) throws Exception; -->
 <delete id="delete" parameterType="Member">
    DELETE FROM MEMBER
    WHERE NO = #{no}
 </delete>

</mapper>